-- la causal LIKE me permite buscar en parte de una palabra--

SELECT * FROM alumnos a WHERE nombre LIKE ("%ia%");

SELECT * FROM alumnos a WHERE nombre LIKE ("%ia");


SELECT * FROM alumnos a WHERE nombre LIKE ("ia%");

--esto lo que hace es buscar algun nombre que empiece con F comodin en el medio y termine con "ia"

SELECT * FROM alumnos a WHERE nombre LIKE ("M%ia");



 -- con la clausula ORDER By podemos ordenar
SELECT * FROM alumnos ORDER BY nombre;

--asi lo ordenamos de forma descendente--
SELECT * FROM alumnos ORDER BY nombre DESC;
	

SELECT * FROM alumnos ORDER BY nombre ASC;

--para ordenar primero por el nombre y segundo por el apellido-
SELECT * FROM alumnos ORDER BY nombre, apellido ASC;




--para limitar cantidad de registros
SELECT * FROM  alumnos a LIMIT 5;

--para limitar por seccion el primer valor me da el punto de salida y el segundo la cantidad
de registro que voy a traer--
SELECT * FROM  alumnos a LIMIT 0.3;

SELECT * FROM  alumnos a LIMIT 5,3;


--contar la cantidad de registro que tiene una tabla
SELECT count(*) FROM alumnos;


--con el * traigo todos los campos 
SELECT * FROM alumnos;

--traigo los campos que seleccione
SELECT nombre,apellido,fechaNacimiento FROM alumnos;


-- para agrupar registro en mySql
SELECT tipoDocumento FROM alumnos GROUP BY tipoDocumento;

-- para agrupar registro en mySql
SELECT nombre FROM alumnos GROUP BY nombre;

-- se usa para actualizar datos en la tabla 
UPDATE alumnos SET
	nombre = "Agustin"
	apellidos = "Ferrer"
	WHERE documento = '33776655';




INSERT alumnos SET
	documento = "4455895",
	nombre	  = "Diego",
	apellido = "Salvato",
	tipoDocumento = "Ci",
	fechaNacimiento = "1996-11-15";

INSERT alumnos SET
	documento = "966695",
	nombre	  = "Marianela",
	apellido = "Gazo",
	tipoDocumento = "Ci",
	fechaNacimiento = "1996-11-15";

INSERT alumnos SET
	documento = "4455225",
	nombre	  = "Pia",
	apellido = "Pereira",
	tipoDocumento = "Ci",
	fechaNacimiento = "1996-11-15";


SELECT * FROM  alumnos WHERE apellidos != "Delgado";

--todos los Delgado que nacieron despuÃ©s del 01-01-1985

select nombre from alumnos WHERE apellido = "Delgado" and fechaNacimiento > "1985-01-01"


--con la clausula OR lo que haces es traer registros que cumpplan una parte y la otra
SELECT * FROM  alumnos WHERE apellido = "Delgado" OR apellido = "Garcia";

 --con la clausula NOT trae todos los opuestos al like
SELECT * FROM alumnos WHERE  nombre NOT LIKE ("%ian");

-- todos los alumnos que no sean Delgado y no tengo la letra "e" en el nombre ordenados por fecha de nacimiento
SELECT * FROM alumnos WHERE apellido = "Delgado" AND nombre NOT LIKE ("%e%") ORDER BY fechaNacimiento;



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


SELECT  * FROM tipocursos;

INSERT INTO tiposcursos
	SET 
		nombre= "Excel Basico",
		descripcion= "Curso basico de manejo de Excel"
		
		
INSERT INTO tipocursos
	SET 
		nombre= "Excel intermedio",
		descripcion= "Curso Intermedio de manejo de Excel"		
		
SELECT * FROM profesores;

DELETE FROM  profesores WHERE nombre = "TTOTOT"

INSERT INTO profesores
	SET documento = "6666",
		nombre = "Ivana",
		apellidos = "Moreno",
		fechaNacimiento = "1988-10-04";

4444444
45678132
6666
CONSTRAINT c_tipoCurso_fk1 FOREIGN KEY (idTipoCurso) REFERENCES tipoCursos (idTipoCurso),
CONSTRAINT c_profesores_fk2 FOREIGN KEY (profesores) REFERENCES profesores (documento)



	 select * From cursos;  
	
	INSERT into cursos set
	 		anio = 2001,
	 		idTipoCurso = 1,
	 		profesores = '6666'
		
		
SELECT * FROM 
	cursos c
INNER JOIN tiposcursos t ON t.idTipoCurso = c.idTipoCurso;
	 		
		